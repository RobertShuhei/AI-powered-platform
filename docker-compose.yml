version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ai-tour-guide-db
    environment:
      POSTGRES_DB: ai_tour_guide
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ai-tour-guide-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ai-tour-guide-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_tour_guide
      - SECRET_KEY=your-secret-key-here
      - JWT_SECRET_KEY=your-jwt-secret-key-here
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ai-tour-guide-network
    command: >
      sh -c "flask db upgrade &&
             python run.py"

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    container_name: ai-tour-guide-frontend
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:5000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - ai-tour-guide-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: ai-tour-guide-redis
    ports:
      - "6379:6379"
    networks:
      - ai-tour-guide-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  ai-tour-guide-network:
    driver: bridge